Checks: "*,readability,-llvm-header-guard,-llvm-include-order,-modernize-use-trailing-return-type,-fuchsia-default-arguments,-fuchsia-default-arguments-calls,-fuchsia-overloaded-operator,-google-runtime-references,-hicpp-signed-bitwise,-hicpp-special-member-functions,-hicpp-no-array-decay,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-special-member-functions,-cppcoreguidelines-pro-type-reinterpret-cast, -hicpp-avoid-c-arrays,-llvmlibc-callee-namespace,-llvmlibc-restrict-system-libc-headers,-llvmlibc-implementation-in-namespace,-modernize-avoid-c-arrays,-cppcoreguidelines-avoid-c-arrays,-altera-unroll-loops,-cppcoreguidelines-pro-type-union-access
-cppcoreguidelines-owning-memory,-cert-err58-cpp,-fuchsia-statically-constructed-objects,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-avoid-magic-numbers,-readability-magic-numbers"
# Second line disables checks specific to Testing


WarningsAsErrors: "*"

CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase, value: CamelCase }
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.FunctionCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumCase, value: CamelCase }
  - { key: readability-identifier-naming.ClassMethodCase, value: CamelCase }
  - { key: readability-identifier-naming.GlobalFunctionCase, value: CamelCase }
  - { key: readability-identifier-naming.TypedefCase, value: CamelCase }
  - {
      key: readability-identifier-naming.TemplateParameterCase,
      value: CamelCase,
    }

  - { key: readability-identifier-naming.EnumConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ClassConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ConstantMemberCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.StaticConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.StaticVariableCase, value: UPPER_CASE }
  - {
      key: readability-identifier-naming.MacroDefinitionCase,
      value: UPPER_CASE,
    }

  - { key: readability-identifier-naming.PrivateMemberPrefix, value: _ }
  - { key: readability-identifier-naming.VariableCase, value: camelBack }
  - { key: readability-identifier-naming.ParameterCase, value: camelBack }
  - { key: readability-identifier-naming.ConstantCase, value: camelBack }
  - { key: readability-identifier-naming.PointerCase, value: camelBack }
  - { key: readability-identifier-naming.GlobalPointerCase, value: camelBack }
  - { key: readability-identifier-naming.GlobalVariableCase, value: camelBack }
  - { key: readability-identifier-naming.GlobalPointerSuffix, value: Pointer }
  - {
      key: readability-identifier-naming.PointerParameterSuffix,
      value: Pointer,
    }
  - { key: readability-identifier-naming.LocalPointerSuffix, value: Pointer }
  - {
      key: readability-implicit-bool-conversion.AllowIntegerConditions,
      value: 1,
    }
  - {
      key: readability-implicit-bool-conversion.AllowPointerConditions,
      value: 1,
    }
  - { key: readability-function-size.ParameterThreshold, value: "10" }
  - { key: readability-function-size.LineThreshold, value: "80" }
  - {
      key: readability-function-cognitive-complexity.LineThreshold,
      value: "30",
    }
  - { key: readability-magic-numbers.IgnoreBitFieldsWidths, value: "true" }
  - {
      key: readability-magic-numbers.IgnoredIntegerValues,
      value: "0;1;2;3;4;5;8;10;16;32;64;100;1000;1024;",
    }
  - {
      key: cppcoreguidelines-avoid-magic-numbers.IgnoredIntegerValues,
      value: "0;1;2;3;4;5;8;10;16;32;64;100;1000;1024;",
    }
  - {
      key: cppcoreguidelines-avoid-magic-numbers.IgnoreBitFieldsWidths,
      value: "true",
    }
  - {
      key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctions,
      value: "true",
    }
  - {
      key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctionsWhenCopyIsDeleted,
      value: "true",
    }
  - { key: bugprone-easily-swappable-parameters.MinimumLength, value: 4 }